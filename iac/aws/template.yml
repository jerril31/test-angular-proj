---
AWSTemplateFormatVersion: 2010-09-09

Parameters:
  PrefixLabel:
    Description: 3 letter lowercase string to prefix all resources created by this stack.  This will allow multiple teams to deploy this pattern in the same AWS account
    Type: String
    Default: "lxo"
    MaxLength: 3
    AllowedPattern: ^[a-zA-Z]*$
  GitPullSubnet:
    Description: The subnet that the CodePipeline and CodeBuild will be deployed in. These are private subnet and your source control should be accessible from this subnet. Atleast 2 subnets needs to be selected
    Type: "List<AWS::EC2::Subnet::Id>"
  GitPullVpc:
    Description: The VPC you want to deploy the CodePipeline and CodeBuild into. Select the default one
    Type: "AWS::EC2::VPC::Id"
    Default: ""
  SecurityGroup:
    Description: Security which got created at the time of gitlab custom source integration to provide access to gitlab source code. Select security group starts with "git-custom-source-****"
    Type: "List<AWS::EC2::SecurityGroup::Id>"
    Default: ""
  CodeBaseBranch:
    Description: "The branch you want to clone as part of the CodePipeline"
    Type: String
    Default: "master"
  CodeBaseGitUrl:
    Description: Example is git.delta.com/techops/eng/topegdrppo/pdf-pw-remover-spa.git (Do not use https://)
    Type: String
    Default: git.delta.com/techops/eng/topegdrppo/pdf-pw-remover-spa.git
  CodeBaseContextPath:
    Description: If the project is in a sub directory, provide the context path (ex... ./src)
    Type: String
    Default: "./"
  SourceActionVersion:
    Description: The version of the custom source action to use.
    Type: String
    Default: "1"
  SourceActionProvider:
    Description: The provider name of the custom source action.
    Type: String
    Default: "DeltaGitLab"
  CodePipelineName:
    Description: Name for CodePipeline. A good pattern is GitLab Group followed by Git repo name. ex=ccoe.my-project-name
    Type: String
    Default: "techhops-eng-pprmr-spa-pipeline"
  CodeBaseAccessTokenUserName:
    Description: The access token for the CodeBase repo.
    Type: String
    NoEcho: "true"
  CodeBaseAccessTokenPassword:
    Description: The access token for the CodeBase repo.
    Type: String
    NoEcho: "true"
  GitWebHookIpAddress:
    Description: Git WebHook source IP address.
    Type: String
    Default: "205.174.22.25/32"
  CodeBuildServiceRoleName:
    Description: The role name for the code build service, must start with 'delegate-admin'
    Type: String
    Default: delegate-admin-codebuild-role
  PipelineRoleName:
    Description: Name for the PipelineRole, must start with 'delegate-admin'
    Type: String
    Default: delegate-admin-codepipeline-role
  ArtifactStoreBucket:
    Description: S3 bucket name for SPA UI code for 3rd party git integration
    Type: String
    Default: gitlab-custom-source-artifactstore
  ProjectName:
    Type: String
    Description: The name of the project for which we are building this CI/CD pipeline
    Default: pprmr-spa
  SiteBucketName:
    Description: S3 bucket name for SPA UI hosting
    Type: String
    Default: pprmr-spa

Resources:
  CodeBaseAccessTokenSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${PrefixLabel}-pprmr-spa-sm
      Description: The user and access token for the Build Spec project
      SecretString: !Sub "${CodeBaseAccessTokenUserName}:${CodeBaseAccessTokenPassword}"

  SiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${PrefixLabel}-${SiteBucketName}"
      Tags:
        - Key: Name
          Value: !Sub "${PrefixLabel}-${SiteBucketName}"

  CodePipelinePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${PrefixLabel}-CodePipelinePolicy
      Roles:
        - !Ref PipelineRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - s3:GetObject
              - s3:ListBucket
              - s3:GetObjectVersion
              - s3:GetBucketVersioning
              - s3:PutObject
            Effect: Allow
            Resource:
              - Fn::Sub: arn:aws:s3:::${ArtifactStoreBucket}-${AWS::AccountId}
              - Fn::Sub: arn:aws:s3:::${ArtifactStoreBucket}-${AWS::AccountId}/*
              - Fn::Sub: arn:aws:s3:::${SiteBucket}
              - Fn::Sub: arn:aws:s3:::${SiteBucket}/*
          - Action:
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
            Effect: Allow
            Resource:
              - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${AWS::StackName}*"
  CodeBuildPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "delegate-admin-CodeBuildPolicy-${PrefixLabel}"
      Roles:
        - !Ref CodeBuildServiceRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - s3:GetObject
              - s3:ListBucket
              - s3:GetObjectVersion
              - s3:GetBucketVersioning
              - s3:PutObject
            Effect: Allow
            Resource:
              - Fn::Sub: arn:aws:s3:::${ArtifactStoreBucket}-${AWS::AccountId}
              - Fn::Sub: arn:aws:s3:::${ArtifactStoreBucket}-${AWS::AccountId}/*
              - Fn::Sub: arn:aws:s3:::${SiteBucket}
              - Fn::Sub: arn:aws:s3:::${SiteBucket}/*
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - "*"
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Sub ${ArtifactStoreBucket}-${AWS::AccountId}
        EncryptionKey:
          Id: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/gitlab-codepipeline-cmk"
          Type: KMS
      Name: !Sub ${PrefixLabel}-${CodePipelineName}
      RestartExecutionOnUpdate: true
      RoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/${PipelineRoleName}"
      Stages:
        - Name: Source
          Actions:
            - Name: CloneRepository
              ActionTypeId:
                Category: Source
                Owner: Custom
                Version: !Ref SourceActionVersion
                Provider: !Ref SourceActionProvider
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Branch: !Ref CodeBaseBranch
                GitUrl: !Ref CodeBaseGitUrl
                ContextPath: !Ref CodeBaseContextPath
                PipelineName: !Sub ${PrefixLabel}-${CodePipelineName}
                AccessTokenSecretKeyName: !Ref CodeBaseAccessTokenSecret
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              InputArtifacts:
                - Name: SourceOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref BuildProject
                EnvironmentVariables: !Sub '[{"name":"SOURCE_BUCKET","value":"${ArtifactStoreBucket}-${AWS::AccountId}","type":"PLAINTEXT"}]'
              RunOrder: 1
        - Name: Prod
          Actions:
            - Name: Deploy
              InputArtifacts:
                - Name: BuildOutput
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref ProdDeployProject
              RunOrder: 1

  CodeBasePipelineWebhook:
    Type: "AWS::CodePipeline::Webhook"
    Properties:
      TargetPipeline: !Sub ${PrefixLabel}-CodeBasePipelineWebhook
      TargetPipelineVersion: 1
      TargetAction: Source
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: "refs/heads/{CodeBaseBranch}"
      Authentication: IP
      AuthenticationConfiguration:
        AllowedIPRange: !Ref GitWebHookIpAddress
      RegisterWithThirdParty: false

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      VpcConfig:
        VpcId: !Ref GitPullVpc
        SecurityGroupIds: !Ref SecurityGroup
        Subnets: !Ref GitPullSubnet
      Name: !Sub ${AWS::StackName}-BuildProject
      ServiceRole: !Sub "arn:aws:iam::${AWS::AccountId}:role/${CodeBuildServiceRoleName}"
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: "LINUX_CONTAINER"
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: "aws/codebuild/standard:3.0"
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      TimeoutInMinutes: 5

  ProdDeployProject:
    Type: AWS::CodeBuild::Project
    Properties:
      VpcConfig:
        VpcId: !Ref GitPullVpc
        SecurityGroupIds: !Ref SecurityGroup
        Subnets: !Ref GitPullSubnet
      Name: !Sub ${AWS::StackName}-ProdDeployProject
      ServiceRole: !Sub "arn:aws:iam::${AWS::AccountId}:role/${CodeBuildServiceRoleName}"
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: "LINUX_CONTAINER"
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: "aws/codebuild/standard:3.0"
        EnvironmentVariables:
          - Name: BUCKET_NAME
            Value: !Sub "${PrefixLabel}-${SiteBucketName}"
      Source:
        Type: CODEPIPELINE
        BuildSpec: deployspec.yml
      TimeoutInMinutes: 5

  CloudFormationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub delegate-admin-cf-${PrefixLabel}-${ProjectName}-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub arn:aws:iam::${AWS::AccountId}:policy/cft-developer-iam-access-policy
      PermissionsBoundary: !Sub arn:aws:iam::${AWS::AccountId}:policy/cft-developer-boundary-policy
      Policies:
        - PolicyName: delegate-admin-CloudFormationPolicy-Inline
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - Fn::Sub: arn:aws:s3:::${ArtifactStoreBucket}-${AWS::AccountId}/*
                  - Fn::Sub: arn:aws:s3:::${SiteBucket}/*
              - Effect: Allow
                Action:
                  - iam:GetRole
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:PutRolePolicy
                Resource:
                  - Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/*
              - Effect: Allow
                Action:
                  - iam:AttachRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:DetachRolePolicy
                Resource:
                  - Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/*
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - "*"

Outputs:
  SPAS3BucketName:
    Description: |
      'S3 Bucket where SPA is deployed'
    Value: !Sub "${PrefixLabel}-${SiteBucketName}"
