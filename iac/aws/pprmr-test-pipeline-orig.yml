# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
AWSTemplateFormatVersion: "2010-09-09"
Description: CF configurations for PDF Permission Remover S3 App Buckets.

Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: Required Tags
        Parameters:
          - Blockcode
          - CostCenter
          - UniqueID
          - DataClassification
          - SupportGroup
          - ChangeGroup
          - DrTier
          - PciIndicator
          - PhiIndicator
          - SoxIndicator
          - CuiIndicator
      - Label:
          default: Application Configurations
        Parameters:
          - AppPrefix
          - GroupResourcePrefix
          - Environment
      - Label:
          default: S3 Configurations
        Parameters:
          - PprmrLambdaCodeBucket
          - SPABucketName
          - S3LogsBucketName
          - S3LogsBucketACL
          - EmailRecipient
          - TopicName


Parameters:

  GitHubOAuthToken:
    Type: String
    Default: "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"
  GitHubOwner:
    Type: String
    Default: "jerril31"
  GitHubRepo:
    Type: String
    Default: "test-hello-world"
  GitHubBranch:
    Type: String
    Default: "main"
  
  CodeBuildServiceRoleName:
    Description: The role name for the code build service, must start with 'delegate-admin'
    Type: String
    Default: delegate-admin-pprmr-test-codebuild-role
  PipelineRoleName:
    Description: Name for the PipelineRole, must start with 'delegate-admin'
    Type: String
    Default: delegate-admin-pprmr-test-codepipeline-role
  ArtifactStoreBucket:
    Description: S3 bucket name for SPA UI code for 3rd party git integration
    Type: String
    Default: techops-eng-dev-pprmr-test-artifact-bucket
  # ProjectName:
  #   Type: String
  #   Description: The name of the project for which we are building this CI/CD pipeline
  #   Default: angular-spa
  SiteBucketName:
    Description: S3 bucket name for SPA UI hosting
    Type: String
    Default: techops-eng-dev-test-spa-bucket

Resources:

  PipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Ref PipelineRoleName
      PermissionsBoundary: !Sub arn:aws:iam::${AWS::AccountId}:policy/cft-developer-boundary-policy
      Path: "/"
      # ManagedPolicyArns:
      #   - !Ref LambdaAccessPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - #Sid: "AllowLambdaServiceToAssumeRole"
            Effect: "Allow"
            Action:
              - "sts:AssumeRole"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"

  CodeBuildServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Ref CodeBuildServiceRoleName
      PermissionsBoundary: !Sub arn:aws:iam::${AWS::AccountId}:policy/cft-developer-boundary-policy
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - #Sid: "AllowLambdaServiceToAssumeRole"
            Effect: "Allow"
            Action:
              - "sts:AssumeRole"
            Principal:
              Service:
                - "codebuild.amazonaws.com"

##Pil
  CodePipelinePolicy:
    DependsOn: PipelineRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: delegate-admin-pprmr-test-CodePipelinePolicy
      Roles:
        - !Ref PipelineRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action:
          - s3:GetObject
          - s3:ListBucket
          - s3:GetObjectVersion
          - s3:GetBucketVersioning
          - s3:PutObject          
          Effect: Allow
          Resource:
          - Fn::Sub: arn:aws:s3:::${ArtifactStoreBucket}
          - Fn::Sub: arn:aws:s3:::${ArtifactStoreBucket}/*
          - Fn::Sub: arn:aws:s3:::${SiteBucketName}
          - Fn::Sub: arn:aws:s3:::${SiteBucketName}/*          
        - Action:
          - codebuild:StartBuild
          - codebuild:BatchGetBuilds
          Effect: Allow
          Resource:
          - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/techops-eng-dev-pprmr-test-BuildProject*'  
  CodeBuildPolicy:
    DependsOn: CodeBuildServiceRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: delegate-admin-pprmr-test-CodeBuildPolicy
      Roles:
        - !Ref CodeBuildServiceRoleName
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action:
          - s3:GetObject
          - s3:ListBucket
          - s3:GetObjectVersion
          - s3:GetBucketVersioning
          - s3:PutObject
          - s3:DeleteObject
          - s3:GetBucketLocation
          Effect: Allow
          Resource:
          - Fn::Sub: arn:aws:s3:::${ArtifactStoreBucket}
          - Fn::Sub: arn:aws:s3:::${ArtifactStoreBucket}/*
          - Fn::Sub: arn:aws:s3:::${SiteBucketName}
          - Fn::Sub: arn:aws:s3:::${SiteBucketName}/*                                                                     
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource:
          - '*'

  CodePipeline:
    DependsOn: PipelineRole
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStoreBucket
        # EncryptionKey:
        #   Id: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/gitlab-codepipeline-cmk"
        #   Type: KMS    
      Name: techops-eng-dev-pprmr-test-CodePipelineName
      RestartExecutionOnUpdate: true
      RoleArn: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${PipelineRoleName}'      
      Stages:
      - Name: Source
        Actions:
        - Name: CloneRepository
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
            Version: 1
          Configuration:
            Owner: !Ref GitHubOwner
            Repo: !Ref GitHubRepo
            Branch: !Ref GitHubBranch
            PollForSourceChanges: false
            OAuthToken: !Ref GitHubOAuthToken
          OutputArtifacts:
            - Name: SourceOutput
          RunOrder: 1
      - Name: Build
        Actions:
        - Name: CodeBuild
          InputArtifacts:
          - Name: SourceOutput
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: '1'
            Provider: CodeBuild
          OutputArtifacts:
          - Name: BuildOutput
          Configuration:
            ProjectName: !Ref BuildProject
            # EnvironmentVariables: !Sub '[{"name":"SOURCE_BUCKET","value":"${ArtifactStoreBucket}-${AWS::AccountId}","type":"PLAINTEXT"}]'
          RunOrder: 1
      # - Name: Prod
      #   Actions:
      #   - Name: Deploy
      #     InputArtifacts:
      #     - Name: BuildOutput
      #     ActionTypeId:
      #       Category: Build
      #       Owner: AWS
      #       Version: '1'
      #       Provider: CodeBuild
      #     Configuration:
      #       ProjectName: !Ref ProdDeployProject
      #     RunOrder: 1

  # CodeBasePipelineWebhook:
  #   Type: "AWS::CodePipeline::Webhook"
  #   Properties:
  #     TargetPipeline: !Sub ${PrefixLabel}-CodeBasePipelineWebhook
  #     TargetPipelineVersion: 1
  #     TargetAction: Source
  #     Filters:
  #       - JsonPath: '$.ref'
  #         MatchEquals: 'refs/heads/{CodeBaseBranch}'
  #     Authentication: IP
  #     AuthenticationConfiguration:
  #       AllowedIPRange: !Ref GitWebHookIpAddress
  #     RegisterWithThirdParty: false

  GithubWebhook:
    Type: 'AWS::CodePipeline::Webhook'
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      RegisterWithThirdParty: true
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/main
      TargetPipeline: !Ref CodePipeline
      TargetAction: CloneRepository
      TargetPipelineVersion: !GetAtt CodePipeline.Version
  
  BuildProject:
    DependsOn: CodeBuildServiceRole
    Type: AWS::CodeBuild::Project
    Properties:
      # VpcConfig:        
      #   VpcId: !Ref GitPullVpc
      #   SecurityGroupIds: !Ref SecurityGroup
      #   Subnets: !Ref GitPullSubnet
      Name: techops-eng-dev-pprmr-test-BuildProject
      ServiceRole: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${CodeBuildServiceRoleName}'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: "LINUX_CONTAINER"
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: "aws/codebuild/standard:3.0"
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      TimeoutInMinutes: 5

  

  